
-- Enable CLR
sp_configure 'clr enabled', 1;
RECONFIGURE WITH OVERRIDE;
GO

--Drop the functions if they already exist
DROP FUNCTION IF EXISTS CURL.XGET
GO
DROP PROCEDURE IF EXISTS CURL.XGETREX
GO
DROP PROCEDURE IF EXISTS CURL.XPOST
GO
DROP PROCEDURE IF EXISTS CURL.XPOSTEX
GO
DROP PROCEDURE IF EXISTS CURL.XPOSTREX
GO
DROP PROCEDURE IF EXISTS CURL.XPUTEX
GO
DROP PROCEDURE IF EXISTS CURL.XPUTREX
GO
DROP PROCEDURE IF EXISTS CURL.XPATCHEX
GO
DROP PROCEDURE IF EXISTS CURL.XPATCHREX
GO
DROP PROCEDURE IF EXISTS CURL.XDELETEEX
GO
DROP PROCEDURE IF EXISTS CURL.XDELETEREX
GO
DROP ASSEMBLY IF EXISTS SqlClrCurl;
GO
--ALTER DATABASE mydb SET TRUSTWORTHY ON
CREATE ASSEMBLY SqlClrCurl
FROM 'd:\Repository\CURL\bin\Release\SqlClrCurl.dll'
WITH PERMISSION_SET = UNSAFE ;
GO

--DROP SCHEMA CURL;
--GO
--Create the schema where CURL modules will be placed.
CREATE SCHEMA CURL;
GO

--Create the function/procedure
CREATE FUNCTION CURL.XGET (@H NVARCHAR(MAX), @url NVARCHAR(4000))
RETURNS NVARCHAR(MAX)
AS EXTERNAL NAME SqlClrCurl.Curl.Get;
GO

CREATE PROCEDURE CURL.XGETREX3 (@H NVARCHAR(MAX), @url NVARCHAR(4000),@response NVARCHAR(MAX) out, @statusCode int out, @statusDescription NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.GetRex;
GO

CREATE PROCEDURE CURL.XPOST (@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000))
AS EXTERNAL NAME SqlClrCurl.Curl.Post;
GO

CREATE PROCEDURE CURL.XPOSTEX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.PostEx;
GO

CREATE PROCEDURE CURL.XPOSTREX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out, @statusCode int out, @statusDescription NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.PostREx;
GO

CREATE PROCEDURE CURL.XPUTEX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.PutEx;
GO

CREATE PROCEDURE CURL.XPUTREX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out, @statusCode int out, @statusDescription NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.PutREx;
GO


CREATE PROCEDURE CURL.XDELETEEX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.[DeleteEx];
GO

CREATE PROCEDURE CURL.XDELETEREX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out, @statusCode int out, @statusDescription NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.[DeleteREx];
GO

CREATE PROCEDURE CURL.XPATCHEX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.PatchEx;
GO

CREATE PROCEDURE CURL.XPATCHREX(@H NVARCHAR(MAX), @d NVARCHAR(MAX), @url NVARCHAR(4000), @response NVARCHAR(MAX) out, @statusCode int out, @statusDescription NVARCHAR(MAX) out)
AS EXTERNAL NAME SqlClrCurl.Curl.PatchREx;
GO

